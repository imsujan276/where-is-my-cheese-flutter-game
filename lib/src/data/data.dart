import 'package:maze/maze.dart';
import 'package:where_is_my_cheese/src/models/levels.dart';

final MazeItem bean = MazeItem('assets/beans.png', ImageType.asset);
final MazeItem corn = MazeItem('assets/corn.png', ImageType.asset);
final MazeItem meat = MazeItem('assets/meat.png', ImageType.asset);

List<Level> data = [
  Level(level: 1, row: 6, column: 6, checkpoints: []),
  Level(level: 2, row: 6, column: 7, checkpoints: []),
  Level(level: 3, row: 6, column: 8, checkpoints: []),
  Level(level: 4, row: 6, column: 9, checkpoints: []),
  Level(level: 5, row: 6, column: 10, checkpoints: []),
  Level(level: 6, row: 6, column: 11, checkpoints: [meat]),
  Level(level: 7, row: 6, column: 12, checkpoints: [corn]),
  Level(level: 8, row: 6, column: 13, checkpoints: []),
  Level(level: 9, row: 6, column: 14, checkpoints: [meat]),
  Level(level: 10, row: 6, column: 15, checkpoints: [bean]),
  Level(level: 11, row: 7, column: 7, checkpoints: []),
  Level(level: 12, row: 7, column: 8, checkpoints: []),
  Level(level: 13, row: 7, column: 9, checkpoints: []),
  Level(level: 14, row: 7, column: 10, checkpoints: [corn, bean]),
  Level(level: 15, row: 7, column: 11, checkpoints: []),
  Level(level: 16, row: 7, column: 12, checkpoints: []),
  Level(level: 17, row: 7, column: 13, checkpoints: [meat, corn]),
  Level(level: 18, row: 7, column: 14, checkpoints: []),
  Level(level: 19, row: 7, column: 15, checkpoints: [bean, corn]),
  Level(level: 20, row: 8, column: 8, checkpoints: [bean, corn, meat]),
  Level(level: 21, row: 8, column: 9, checkpoints: [bean, corn, meat]),
  Level(level: 22, row: 8, column: 10, checkpoints: [bean, corn, meat]),
  Level(level: 23, row: 8, column: 11, checkpoints: [bean, corn, meat]),
  Level(level: 24, row: 8, column: 12, checkpoints: [bean, corn, meat]),
  Level(level: 25, row: 8, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 26, row: 8, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 27, row: 8, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 28, row: 9, column: 9, checkpoints: [bean, corn, meat]),
  Level(level: 29, row: 9, column: 10, checkpoints: [bean, corn, meat]),
  Level(level: 30, row: 9, column: 11, checkpoints: [bean, corn, meat]),
  Level(level: 31, row: 9, column: 12, checkpoints: [bean, corn, meat]),
  Level(level: 32, row: 9, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 33, row: 9, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 34, row: 9, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 35, row: 10, column: 10, checkpoints: [bean, corn, meat]),
  Level(level: 36, row: 10, column: 11, checkpoints: [bean, corn, meat]),
  Level(level: 37, row: 10, column: 12, checkpoints: [bean, corn, meat]),
  Level(level: 38, row: 10, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 39, row: 10, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 40, row: 10, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 41, row: 11, column: 11, checkpoints: [bean, corn, meat]),
  Level(level: 42, row: 11, column: 12, checkpoints: [bean, corn, meat]),
  Level(level: 43, row: 11, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 44, row: 11, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 45, row: 11, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 46, row: 12, column: 12, checkpoints: [bean, corn, meat]),
  Level(level: 47, row: 12, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 48, row: 12, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 49, row: 12, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 50, row: 13, column: 13, checkpoints: [bean, corn, meat]),
  Level(level: 51, row: 13, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 52, row: 13, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 53, row: 14, column: 14, checkpoints: [bean, corn, meat]),
  Level(level: 54, row: 14, column: 15, checkpoints: [bean, corn, meat]),
  Level(level: 55, row: 15, column: 15, checkpoints: [bean, corn, meat]),
];
